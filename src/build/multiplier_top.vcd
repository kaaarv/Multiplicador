$date
	Wed Nov 06 08:55:24 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_multiplier_top $end
$var wire 1 ! mult_ready $end
$var wire 16 " mult [15:0] $end
$var reg 1 # clk $end
$var reg 8 $ num_1 [7:0] $end
$var reg 8 % num_2 [7:0] $end
$var reg 1 & reset $end
$var reg 1 ' start $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 16 ( mult [15:0] $end
$var wire 8 ) num_1 [7:0] $end
$var wire 8 * num_2 [7:0] $end
$var wire 1 & reset $end
$var wire 1 ' start $end
$var wire 1 + shift_all $end
$var wire 16 , mult_result_value [15:0] $end
$var wire 1 ! mult_ready $end
$var wire 1 - load_add $end
$var wire 1 . load_Q $end
$var wire 1 / load_M $end
$var wire 2 0 Qo_Qprev [1:0] $end
$scope module u_multiplier $end
$var wire 1 # clk $end
$var wire 8 1 num_1 [7:0] $end
$var wire 8 2 num_2 [7:0] $end
$var wire 1 & reset $end
$var wire 1 + shift_all $end
$var wire 1 - load_add $end
$var wire 1 . load_Q $end
$var wire 1 / load_M $end
$var reg 8 3 HQ [7:0] $end
$var reg 8 4 LQ [7:0] $end
$var reg 8 5 M [7:0] $end
$var reg 1 6 Q_prev $end
$var reg 2 7 Qo_Qprev [1:0] $end
$var reg 8 8 adder_sub_out [7:0] $end
$var reg 16 9 mult_result [15:0] $end
$var reg 17 : shift [16:0] $end
$upscope $end
$scope module u_multiplier_FSM $end
$var wire 2 ; Qo_Qprev [1:0] $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 ' valid $end
$var reg 4 < counter [3:0] $end
$var reg 3 = current_state [2:0] $end
$var reg 1 / load_M $end
$var reg 1 . load_Q $end
$var reg 1 - load_add $end
$var reg 3 > next_state [2:0] $end
$var reg 1 ! ready $end
$var reg 1 + shift_all $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 >
b0 =
b0 <
bx ;
b0 :
bx 9
b0 8
bx 7
06
b0 5
b0 4
b0 3
b0 2
b0 1
bx 0
0/
0.
0-
bx ,
0+
b0 *
b0 )
bx (
0'
1&
b0 %
b0 $
0#
bx "
0!
$end
#5
1#
#10
0#
0&
#15
b0 0
b0 7
b0 ;
b0 "
b0 (
b0 ,
b0 9
1#
#20
0#
b100101 %
b100101 *
b100101 2
#25
1#
#30
0#
#35
1-
1.
1/
b1 =
b10 >
1#
1'
#40
0#
#45
0.
0/
0-
b101 >
b1001010 :
b10 =
1#
#50
0#
#55
1+
b10 >
b101 =
b100101 4
1#
#60
0#
#65
0+
b11 >
b10 0
b10 7
b10 ;
b100101 "
b100101 (
b100101 ,
b100101 9
b100101 :
b1 <
b10 =
1#
#70
0#
#75
1-
b101 >
b11 =
16
b10010 4
1#
#80
0#
#85
1+
0-
b10 >
b1 0
b1 7
b1 ;
b10010 "
b10010 (
b10010 ,
b10010 9
b101 =
1#
#90
0#
#95
0+
b100 >
b10 =
b10 <
b10010 :
1#
#100
0#
#105
1-
b101 >
06
b1001 4
b100 =
1#
#110
0#
#115
1+
0-
b10 >
b101 =
b10 0
b10 7
b10 ;
b1001 "
b1001 (
b1001 ,
b1001 9
1#
#120
0#
#125
0+
b11 >
b1001 :
b11 <
b10 =
1#
#130
0#
#135
1-
b101 >
b11 =
16
b100 4
1#
#140
0#
#145
1+
0-
b10 >
b1 0
b1 7
b1 ;
b100 "
b100 (
b100 ,
b100 9
b101 =
1#
#150
0#
#155
0+
b100 >
b10 =
b100 <
b100 :
1#
#160
0#
#165
1-
b101 >
06
b10 4
b100 =
1#
#170
0#
#175
1+
0-
b10 >
b101 =
b0 0
b0 7
b0 ;
b10 "
b10 (
b10 ,
b10 9
1#
#180
0#
#185
0+
b101 >
b10 :
b101 <
b10 =
1#
#190
0#
#195
1+
b10 >
b101 =
b1 4
1#
#200
0#
#205
0+
b11 >
b10 0
b10 7
b10 ;
b1 "
b1 (
b1 ,
b1 9
b1 :
b110 <
b10 =
1#
#210
0#
#215
1-
b101 >
b11 =
16
b0 4
1#
#220
0#
#225
1+
0-
b10 >
b1 0
b1 7
b1 ;
b0 "
b0 (
b0 ,
b0 9
b101 =
1#
#230
0#
#235
0+
b100 >
b10 =
b111 <
b0 :
1#
#240
0#
#245
1-
b101 >
06
b100 =
1#
#250
0#
#255
1+
0-
b10 >
b101 =
b0 0
b0 7
b0 ;
1#
#260
0#
#265
0+
b101 >
b1000 <
b10 =
1#
#270
0#
#275
1+
b10 >
b101 =
1#
#280
0#
#285
0+
b101 >
b1001 <
b10 =
1#
#290
0#
#295
1+
b110 >
b101 =
1#
#300
0#
#305
1!
0+
b1010 <
b110 =
1#
#310
0#
#315
1#
#320
0#
#325
1#
#330
0#
#335
1#
#340
0#
#345
1#
#350
0#
#355
1#
#360
0#
#365
1#
#370
0#
#375
1#
#380
0#
#385
1#
#390
0#
#395
1#
#400
0#
#405
1#
#410
0!
b0 =
b0 <
b0 >
0#
0'
1&
#415
1#
#420
0#
#425
1#
0&
#430
0#
#435
1#
#440
0#
b101110 %
b101110 *
b101110 2
b110101 $
b110101 )
b110101 1
#445
1#
#450
0#
#455
1-
1.
1/
b1 =
b10 >
1#
1'
#460
0#
#465
0.
0/
0-
b101 >
b10 =
b110101 5
b1011100 :
1#
#470
0#
#475
1+
b10 >
b101110 4
b101 =
1#
#480
0#
#485
0+
b101 >
b10 =
b1 <
b101110 :
b101110 "
b101110 (
b101110 ,
b101110 9
1#
#490
0#
#495
1+
b10 >
b10111 4
b101 =
1#
#500
0#
#505
0+
b11001011 8
b11 >
b10 =
b10 <
b10111 :
b10 0
b10 7
b10 ;
b10111 "
b10111 (
b10111 ,
b10111 9
1#
#510
0#
#515
1-
b101 >
16
b1011 4
b11 =
1#
#520
0#
#525
1+
0-
b0 8
b10 >
b101 =
b11001011000010111 :
b11 0
b11 7
b11 ;
b1011 "
b1011 (
b1011 ,
b1011 9
1#
#530
0#
#535
0+
b101 >
b11001011 3
b11100101100001011 :
b11 <
b10 =
1#
#540
0#
#545
1+
b10 >
b101 =
b1100101100001011 "
b1100101100001011 (
b1100101100001011 ,
b1100101100001011 9
b10000101 4
b11100101 3
1#
#550
0#
#555
0+
b101 >
b1110010110000101 "
b1110010110000101 (
b1110010110000101 ,
b1110010110000101 9
b11110010110000101 :
b100 <
b10 =
1#
#560
0#
#565
1+
b10 >
b101 =
b11000010 4
b11110010 3
1#
#570
0#
#575
b100111 8
0+
b100 >
b1 0
b1 7
b1 ;
b1111001011000010 "
b1111001011000010 (
b1111001011000010 ,
b1111001011000010 9
b11111001011000010 :
b101 <
b10 =
1#
#580
0#
#585
1-
b101 >
b101110 8
b100 =
06
b1100001 4
b11111001 3
1#
#590
0#
#595
b11000100 8
1+
0-
b10 >
b10 0
b10 7
b10 ;
b1111100101100001 "
b1111100101100001 (
b1111100101100001 ,
b1111100101100001 9
b101110011000010 :
b101 =
1#
#600
0#
#605
0+
b11 >
b11111001 8
b10 =
b110 <
b10111001100001 :
b101110 3
1#
#610
0#
#615
b11100010 8
1-
b101 >
b10111001100001 "
b10111001100001 (
b10111001100001 ,
b10111001100001 9
16
b110000 4
b10111 3
b11 =
1#
#620
0#
#625
1+
0-
b1001100 8
b10 >
b101 =
b11100010001100001 :
b1 0
b1 7
b1 ;
b1011100110000 "
b1011100110000 (
b1011100110000 ,
b1011100110000 9
1#
#630
0#
#635
b10111 8
0+
b100 >
b11100010 3
b11110001000110000 :
b111 <
b10 =
1#
#640
0#
#645
1-
b101 >
b100110 8
b100 =
b1110001000110000 "
b1110001000110000 (
b1110001000110000 ,
b1110001000110000 9
06
b11000 4
b11110001 3
1#
#650
0#
#655
b0 8
1+
0-
b10 >
b0 0
b0 7
b0 ;
b1111000100011000 "
b1111000100011000 (
b1111000100011000 ,
b1111000100011000 9
b100110000110000 :
b101 =
1#
#660
0#
#665
0+
b101 >
b10 =
b1000 <
b10011000011000 :
b100110 3
1#
#670
0#
#675
1+
b10 >
b10011000011000 "
b10011000011000 (
b10011000011000 ,
b10011000011000 9
b1100 4
b10011 3
b101 =
1#
#680
0#
#685
0+
b101 >
b10 =
b1001 <
b1001100001100 :
b1001100001100 "
b1001100001100 (
b1001100001100 ,
b1001100001100 9
1#
#690
0#
#695
1+
b110 >
b10000110 4
b1001 3
b101 =
1#
#700
0#
#705
1!
0+
b110 =
b1010 <
b100110000110 :
b100110000110 "
b100110000110 (
b100110000110 ,
b100110000110 9
1#
#710
0#
#715
b11000011 4
b100 3
1#
#720
0#
#725
b11001111 8
b10 0
b10 7
b10 ;
b10011000011 "
b10011000011 (
b10011000011 ,
b10011000011 9
1#
#730
0#
#735
1#
#740
0#
#745
1#
#750
0#
#755
1#
#760
0#
#765
1#
#770
0#
#775
1#
#780
0#
#785
1#
#790
0#
#795
1#
#800
0#
#805
1#
#810
b0 8
0!
b0 4
b0 3
b0 :
b0 5
b0 <
b0 =
b0 >
0#
0'
1&
#815
1#
#820
0#
#825
b0 0
b0 7
b0 ;
b0 "
b0 (
b0 ,
b0 9
1#
0&
#830
0#
#835
1#
#840
0#
b1100001 %
b1100001 *
b1100001 2
b1100011 $
b1100011 )
b1100011 1
#845
1#
#850
0#
#855
1-
1.
1/
b1 =
b10 >
1#
1'
#860
0#
#865
0.
0/
0-
b101 >
b11000010 :
b1100011 5
b10 =
1#
#870
0#
#875
1+
b10 >
b101 =
b1100001 4
1#
#880
0#
#885
b10011101 8
0+
b11 >
b10 0
b10 7
b10 ;
b1100001 "
b1100001 (
b1100001 ,
b1100001 9
b1100001 :
b1 <
b10 =
1#
#890
0#
#895
1-
b101 >
b11 =
16
b110000 4
1#
#900
0#
#905
b1100011 8
1+
0-
b10 >
b1 0
b1 7
b1 ;
b110000 "
b110000 (
b110000 ,
b110000 9
b10011101001100001 :
b101 =
1#
#910
0#
#915
0+
b100 >
b0 8
b10 =
b10 <
b11001110100110000 :
b10011101 3
1#
#920
0#
#925
b110001 8
1-
b101 >
b1001110100110000 "
b1001110100110000 (
b1001110100110000 ,
b1001110100110000 9
06
b10011000 4
b11001110 3
b100 =
1#
#930
0#
#935
1+
0-
b0 8
b10 >
b101 =
b110001100110000 :
b0 0
b0 7
b0 ;
b1100111010011000 "
b1100111010011000 (
b1100111010011000 ,
b1100111010011000 9
1#
#940
0#
#945
0+
b101 >
b110001 3
b11000110011000 :
b11 <
b10 =
1#
#950
0#
#955
1+
b10 >
b101 =
b11000110011000 "
b11000110011000 (
b11000110011000 ,
b11000110011000 9
b11001100 4
b11000 3
1#
#960
0#
#965
0+
b101 >
b1100011001100 "
b1100011001100 (
b1100011001100 ,
b1100011001100 9
b1100011001100 :
b100 <
b10 =
1#
#970
0#
#975
1+
b10 >
b101 =
b1100110 4
b1100 3
1#
#980
0#
#985
0+
b101 >
b110001100110 "
b110001100110 (
b110001100110 ,
b110001100110 9
b110001100110 :
b101 <
b10 =
1#
#990
0#
#995
1+
b10 >
b101 =
b110011 4
b110 3
1#
#1000
0#
#1005
b10100011 8
0+
b11 >
b10 0
b10 7
b10 ;
b11000110011 "
b11000110011 (
b11000110011 ,
b11000110011 9
b11000110011 :
b110 <
b10 =
1#
#1010
0#
#1015
1-
b101 >
b10100000 8
b11 =
16
b11001 4
b11 3
1#
#1020
0#
#1025
b0 8
1+
0-
b10 >
b11 0
b11 7
b11 ;
b1100011001 "
b1100011001 (
b1100011001 ,
b1100011001 9
b10100000000110011 :
b101 =
1#
#1030
0#
#1035
0+
b101 >
b10 =
b111 <
b11010000000011001 :
b10100000 3
1#
#1040
0#
#1045
1+
b10 >
b1010000000011001 "
b1010000000011001 (
b1010000000011001 ,
b1010000000011001 9
b1100 4
b11010000 3
b101 =
1#
#1050
0#
#1055
0+
b110011 8
b100 >
b10 =
b1000 <
b11101000000001100 :
b1 0
b1 7
b1 ;
b1101000000001100 "
b1101000000001100 (
b1101000000001100 ,
b1101000000001100 9
1#
#1060
0#
#1065
b1001011 8
1-
b101 >
06
b110 4
b11101000 3
b100 =
1#
#1070
0#
#1075
1+
0-
b0 8
b10 >
b101 =
b1001011000001100 :
b0 0
b0 7
b0 ;
b1110100000000110 "
b1110100000000110 (
b1110100000000110 ,
b1110100000000110 9
1#
#1080
0#
#1085
0+
b101 >
b1001011 3
b100101100000110 :
b1001 <
b10 =
1#
#1090
0#
#1095
1+
b110 >
b101 =
b100101100000110 "
b100101100000110 (
b100101100000110 ,
b100101100000110 9
b10000011 4
b100101 3
1#
#1100
0#
#1105
b11000010 8
1!
0+
b10 0
b10 7
b10 ;
b10010110000011 "
b10010110000011 (
b10010110000011 ,
b10010110000011 9
b10010110000011 :
b1010 <
b110 =
1#
#1110
0#
#1115
b10101111 8
16
b11000001 4
b10010 3
1#
#1120
0#
#1125
b0 8
b11 0
b11 7
b11 ;
b1001011000001 "
b1001011000001 (
b1001011000001 ,
b1001011000001 9
1#
#1130
0#
#1135
1#
#1140
0#
#1145
1#
#1150
0#
#1155
1#
#1160
0#
#1165
1#
#1170
0#
#1175
1#
#1180
0#
#1185
1#
#1190
0#
#1195
1#
#1200
0#
#1205
1#
#1210
0#
#1215
1#
#1220
0#
